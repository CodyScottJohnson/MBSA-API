// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package protob

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag2 struct {
	TagId int32  `protobuf:"varint,1,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Tag2) Reset()                    { *m = Tag2{} }
func (m *Tag2) String() string            { return proto.CompactTextString(m) }
func (*Tag2) ProtoMessage()               {}
func (*Tag2) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Tag2) GetTagId() int32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *Tag2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Recruit2 struct {
	Email string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
}

func (m *Recruit2) Reset()                    { *m = Recruit2{} }
func (m *Recruit2) String() string            { return proto.CompactTextString(m) }
func (*Recruit2) ProtoMessage()               {}
func (*Recruit2) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Recruit2) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Recruit2) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type Person2 struct {
	Id             int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	FirstName      string `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName       string `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	PrimaryEmail   string `protobuf:"bytes,4,opt,name=primary_email,json=primaryEmail" json:"primary_email,omitempty"`
	PrimaryAddress string `protobuf:"bytes,5,opt,name=primary_address,json=primaryAddress" json:"primary_address,omitempty"`
	PrimaryPhone   string `protobuf:"bytes,6,opt,name=primary_phone,json=primaryPhone" json:"primary_phone,omitempty"`
	ProfilePic     string `protobuf:"bytes,7,opt,name=profile_pic,json=profilePic" json:"profile_pic,omitempty"`
}

func (m *Person2) Reset()                    { *m = Person2{} }
func (m *Person2) String() string            { return proto.CompactTextString(m) }
func (*Person2) ProtoMessage()               {}
func (*Person2) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Person2) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person2) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Person2) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Person2) GetPrimaryEmail() string {
	if m != nil {
		return m.PrimaryEmail
	}
	return ""
}

func (m *Person2) GetPrimaryAddress() string {
	if m != nil {
		return m.PrimaryAddress
	}
	return ""
}

func (m *Person2) GetPrimaryPhone() string {
	if m != nil {
		return m.PrimaryPhone
	}
	return ""
}

func (m *Person2) GetProfilePic() string {
	if m != nil {
		return m.ProfilePic
	}
	return ""
}

func init() {
	proto.RegisterType((*Tag2)(nil), "protob.Tag2")
	proto.RegisterType((*Recruit2)(nil), "protob.Recruit2")
	proto.RegisterType((*Person2)(nil), "protob.Person2")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0x6d, 0xbb, 0xdb, 0x51, 0x57, 0x08, 0x0a, 0x01, 0x11, 0x97, 0x7a, 0x70, 0x4f,
	0x82, 0x15, 0xbc, 0x7b, 0xf0, 0xe0, 0x45, 0x4a, 0xf1, 0x5e, 0xb2, 0x4d, 0xb6, 0x0e, 0xb4, 0x4d,
	0x48, 0xe2, 0xc1, 0x47, 0xf6, 0x2d, 0xa4, 0x93, 0xae, 0xd4, 0x53, 0x32, 0xdf, 0xfc, 0xcc, 0x37,
	0x09, 0x80, 0x57, 0xce, 0x3f, 0x18, 0xab, 0xbd, 0x66, 0x19, 0x1d, 0xfb, 0xe2, 0x11, 0x92, 0x0f,
	0xd1, 0x95, 0xec, 0x0a, 0x32, 0x2f, 0xba, 0x06, 0x25, 0x8f, 0xb6, 0xd1, 0x2e, 0xad, 0x53, 0x2f,
	0xba, 0x37, 0xc9, 0x18, 0x24, 0xa3, 0x18, 0x14, 0x8f, 0xb7, 0xd1, 0x2e, 0xaf, 0xe9, 0x5e, 0x3c,
	0xc3, 0xba, 0x56, 0xad, 0xfd, 0x42, 0x5f, 0xb2, 0x4b, 0x48, 0xd5, 0x20, 0xb0, 0xe7, 0x27, 0x14,
	0x08, 0xc5, 0x44, 0xcd, 0xa7, 0x1e, 0x15, 0x4f, 0x02, 0xa5, 0xa2, 0xf8, 0x89, 0x60, 0x55, 0x29,
	0xeb, 0xf4, 0x58, 0xb2, 0x0d, 0xc4, 0x7f, 0xaa, 0x18, 0x25, 0xbb, 0x01, 0x38, 0xa0, 0x75, 0xbe,
	0x59, 0xd8, 0x72, 0x22, 0xef, 0x62, 0x50, 0xec, 0x1a, 0xf2, 0x5e, 0x1c, 0xbb, 0x41, 0xb5, 0x9e,
	0x00, 0x35, 0xef, 0xe0, 0xdc, 0x58, 0x1c, 0x84, 0xfd, 0x6e, 0xc2, 0x2e, 0xc1, 0x7a, 0x36, 0xc3,
	0x57, 0x5a, 0xe9, 0x1e, 0x2e, 0x8e, 0x21, 0x21, 0xa5, 0x55, 0xce, 0xf1, 0x94, 0x62, 0x9b, 0x19,
	0xbf, 0x04, 0xba, 0x9c, 0x16, 0xde, 0x90, 0xfd, 0x9b, 0x56, 0x4d, 0x8c, 0xdd, 0xc2, 0xa9, 0xb1,
	0xfa, 0x80, 0xbd, 0x6a, 0x0c, 0xb6, 0x7c, 0x45, 0x11, 0x98, 0x51, 0x85, 0xed, 0x3e, 0x7c, 0xef,
	0xd3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x0e, 0x08, 0x86, 0x73, 0x01, 0x00, 0x00,
}
